function result = prune(A, L)
    B1 = {
        strel('arbitrary', [0, 0, 0; 1, 1, 0; 0, 0, 0]),...
        strel('arbitrary', [0, 0, 0; 0, 1, 0; 0, 1, 0]),...
        strel('arbitrary', [0, 0, 0; 0, 1, 1; 0, 0, 0]),...
        strel('arbitrary', [0, 1, 0; 0, 1, 0; 0, 0, 0]),...
        strel('arbitrary', [1, 0, 0; 0, 1, 0; 0, 0, 0]),...
        strel('arbitrary', [0, 0, 0; 0, 1, 0; 1, 0, 0]),...
        strel('arbitrary', [0, 0, 0; 0, 1, 0; 0, 0, 1]),...
        strel('arbitrary', [0, 0, 1; 0, 1, 0; 0, 0, 0])
    };
    B2 = {
        strel('arbitrary', [0, 1, 1; 0, 0, 1; 0, 1, 1]),...
        strel('arbitrary', [1, 1, 1; 1, 0, 1; 0, 0, 0]),...
        strel('arbitrary', [1, 1, 0; 1, 0, 0; 1, 1, 0]),...
        strel('arbitrary', [0, 0, 0; 1, 0, 1; 1, 1, 1]),...
        strel('arbitrary', [0, 0, 1; 0, 0, 1; 1, 1, 1]),...
        strel('arbitrary', [1, 1, 1; 0, 0, 1; 0, 0, 1]),...
        strel('arbitrary', [1, 1, 1; 1, 0, 0; 1, 0, 0]),...
        strel('arbitrary', [1, 0, 0; 1, 0, 0; 1, 1, 1])
    };
    
    % remove endpoints
    X1 = A;
    minus = @(A, B) A & ~B;
    for i = 1:L
        for j = 1:length(B1)
            X1 = minus(X1, bwhitmiss(X1, B1{j}, B2{j}));
        end
    end
    
    % extract endpoints of X1
    X2 = false(size(X1, 1), size(X1, 2));
    for j = 1:length(B1)
        X2 = X2 | bwhitmiss(X1, B1{j}, B2{j});
    end
    
    % conditional dilation on X2
    X3 = X2;
    for i = 1:L
        X3 = imdilate(X3, strel('square', 3)) & A;
    end
    
    result = X1 | X3;
end
